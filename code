from OpenGL.GL import *
from OpenGL.GLU import *
from OpenGL.GLUT import *


def draw_XYZ():
    glBegin(GL_LINES)
    glColor3f(1, 0, 0)
    glVertex(0, 0, 0)
    glVertex(10, 0, 0)

    glColor3f(0, 1, 0)
    glVertex(0, 0, 0)
    glVertex(0, 10, 0)

    glColor3f(0, 0, 1)
    glVertex(0, 0, 0)
    glVertex(0, 0, 10)
    glEnd()


def myInit():
    glMatrixMode(GL_PROJECTION)
    glLoadIdentity()
    gluPerspective(60, 1, 1, 120)
    gluLookAt(13, 15, 13,
              0, 0, 3.7,
              0, 1, 0)
    glClearColor(1, 1, 1, 1)


def building(xt=0):

    glColor3f(.1, .1, .1)
    glLoadIdentity()
    glTranslate(-100+xt, 0, -24)
    glScale(.5, 2, .8)
    glutWireCube(13)
    glColor3f(.8, .9, .6)
    glLoadIdentity()
    glTranslate(-100+xt, 0, -24)
    glScale(.5, 2, .8)
    glutSolidCube(13)


def rect(x1=.26,y1=.2,z1=.2, x2=-.26,y2=.2,z2=.2, x3=-.26,y3=-.4,z3=.2, x4=.26,y4=-.4,z4=.2, rb=0.0,gb=0.0,bb=0.0,rf=0.0,gf=0.0,bf=0.0, lw=3):

    glLineWidth(lw)
    glBegin(GL_POLYGON)
    glColor(rb,gb,bb,0)
    glVertex(x1,y1,z1)
    glVertex(x2,y2,z2)
    glVertex(x3,y3,z3)
    glVertex(x4,y4,z4)
    glEnd()

    glLineWidth(lw)
    glBegin(GL_LINE_LOOP)
    glColor(rf,gf, bf, 0)
    glVertex(x1, y1,z1)
    glVertex(x2, y2,z2)
    glVertex(x3, y3,z3)
    glVertex(x4, y4,z4)
    glEnd()

angle = 0
x = 0
forward = True


def draw():
    global angle
    global x
    global forward

    glMatrixMode(GL_MODELVIEW)
    glLoadIdentity()
    glClear(GL_COLOR_BUFFER_BIT)

    rect(70,0,70, -70,0,70, -70,0,-70, 70,0,-70, .4,.4,.4, 0,0,0, 2)
    rect(70,0,10, -70,0,10, -70,0,-2, 70,0,-2, .2,.2,.2, .8,.8,.8, 90)
    for i in range (0, 79, 3):
        rect(18-i,0,4.2, 16-i,0,4.2, 16-i,0,3.2, 18-i,0,3.2, 1,1,1, 0,0,0, 2)

    for m in range(0,  100, 11):
        building(m)

    glColor3f(.3, .3, .3)
    glLoadIdentity()
    glTranslate(x+0.5*5, -0.5 * 0.25*5, 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glTranslate(x+0.5*5, -0.5 * 0.25*5, - 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glTranslate(x-0.5*5, -0.5 * 0.25*5, -0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glTranslate(x-0.5*5, -0.5 * 0.25*5, 0.5 * 0.5*5)
    glRotate(angle, 0, 0, 1)
    glutSolidTorus(0.125, 0.5, 10, 10)

    glLoadIdentity()
    glColor3f(.1, .1, .2)
    glTranslate(x, 0, 0)
    glScale(1, 0.25, 0.5)
    glutWireCube(5)

    glLoadIdentity()
    glColor3f(.1, .1, .4)
    glTranslate(x, 0, 0)
    glScale(1, 0.25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(.1, .1, .2)
    glTranslate(x, 5*0.25, 0)
    glScale(0.5, 0.25, 0.5)
    glutWireCube(5)

    glLoadIdentity()
    glColor3f(.1, .2, .5)
    glTranslate(x, 5*0.25, 0)
    glScale(0.5, 0.25, 0.5)
    glutSolidCube(5)

    glLoadIdentity()
    glColor3f(.1, .2, .5)
    glTranslate(x, 5*0.25, 0)
    glScale(0.5, 0.25, 0.5)

    glLoadIdentity()
    glColor3f(.9, .9, .2)
    glTranslate(x+2.5, 5 *.03, .9)
    glutSolidSphere(.25, 20, 20)

    glLoadIdentity()
    glColor3f(.9, .9, .2)
    glTranslate(x+2.5, 5 *.03, -.9)
    glutSolidSphere(.25, 20, 20)

    glLoadIdentity()
    glColor3f(.9, .9, .2)
    glTranslate(x+2.5, 5 *.03, 1.2)
    glutSolidSphere(.15, 20, 20)

    glLoadIdentity()
    glColor3f(.9, .9, .2)
    glTranslate(x+2.5, 5 *.03, -1.2)
    glutSolidSphere(.15, 20, 20)

    glutSwapBuffers()

    if forward:
        angle -= 0.1
        x += 0.01
        if x > 12:
            forward = False
    else:
        angle += 0.1
        x -= 0.01
        if x < -30:
            forward = True


glutInit()
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
glutInitWindowSize(600, 600)
glutCreateWindow(b"Moving Car")
myInit()
glutDisplayFunc(draw)
glutIdleFunc(draw)
glutMainLoop()
